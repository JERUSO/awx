---
- name: creacion de snapshot para VM - VMWARE
  hosts: localhost
  gather_facts: no
  vars:
    datacenter: JEAN
    ansible_playbook_interpreter: "/usr/bin/env python3"
  tasks:
    - name: Collecting disk information for given virtual machine from vCenter {{ vcenter_hostname }}
      vmware_guest_disk_info:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        datacenter: "{{ datacenter }}"
        validate_certs: false
        name: "{{ vm_name }}"
      register: existing_disk

    - name: " Gather information from datacenter about specific datastore "
      vmware_datastore_info:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: false
        datacenter: "{{ datacenter }}"
        name: "{{ item.value.backing_datastore }}"
      with_dict: "{{ existing_disk.guest_disk_info }}"
      register: ds_info
      #no_log: true

    - name: Set fact to a list
      set_fact:
        datastore_list: "{{ ds_info.results | map(attribute='datastores') | list | flatten }}"

    - name: Display capacity details for the given virtual machines
      debug:
        msg: "{{ item.name }} datastore total capacity is {{ item.capacity }} and free space is {{ item.freeSpace }}"
      loop: "{{ datastore_list }}"

    - name: Set a fact to the free space percentage
      set_fact:
        free_space_available: " {% if item.freeSpace | int / item.capacity | int * 100  >= 10 %}true{%else%}false{%endif%}"
        free_space_not_available: " {% if item.freeSpace | int / item.capacity | int * 100 < 10 %}true{%else%}false{%endif%}"
      loop: "{{ datastore_list }}"

    - name: Show the results messages
      debug:
        msg: " Space validation: The datastore has enough free space  ."
      when: free_space_available.find("true") == 1 and free_space_not_available.find("false") == 1

    - name: "Show the results messages and fail the play if space requirements are not met"
      fail:
        msg: "Space validation: Reach out to vmware support for snapshot creation as space requirement not meeting on relevant datastore."
      when: free_space_available.find("true") != 1 and free_space_not_available.find("true") != -1

    - name: bloque para la creacion del snapahot
      block:
        - name: Create snapshot of a VM as per provided inputs via variable
          vmware_guest_snapshot:
            hostname: "{{ vcenter_hostname }}"
            username: "{{ vcenter_username }}"
            password: "{{ vcenter_password }}"
            validate_certs: false
            folder: "/{{ datacenter }}/vm/"
            name: "{{ vm_name }}"
            state: present
            datacenter: "{{ datacenter }}"
            snapshot_name: "{{ vm_name }}"
            description: "{{ vm_name }}_snapshot"
            quiesce: "{{ snap_quiesce | default(false) }}"
            memory_dump: "{{ snap_memory_dump | default(false) }}"
          register: make_snap
          when: free_space_available.find("true") == 1 and free_space_not_available.find("false") == 1

        - debug: var=make_snap


        - name: Show the results messages for snapshot creation
          debug:
            msg: "The snapshot creation task was successful."
          when:
            - make_snap.failed != 1
            - make_snap.snapshot_results.snapshots is defined

        - name: Show the results messages for snapshot creation
          debug:
            msg: "The snapshot creation task was skipped as snapshot named {{ snap_name }} already exists for the given virtual machine."
          when:
            - make_snap.msg.find('already exists') != -1


        - name: Show the results messages for snapshot creation
          debug:
            msg: " snapshot creation faied. Please Reach out the VMware support group."
          when:
            - make_snap.changed != 1
            - make_snap.failed == 1
